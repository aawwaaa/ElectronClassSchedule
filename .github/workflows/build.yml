name: Build

on:
  repository_dispatch:
    types: [trigger_build]
  workflow_dispatch:
    inputs:
      branch:
        required: false
        default: "main"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          repository: EnderWolf006/ElectronClassSchedule
          ref: ECS2.0
          path: source
      
      - name: Enter source
        run: cd source

      - name: Set up VS
        uses: seanmiddleditch/gha-setup-vsdevenv@master

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' 

      - name: Install setuptools
        run: pip install setuptools

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install

      - name: Rebuild dependencies
        run: node_modules/.bin/electron-rebuild

      - name: Build application
        run: npm run build

      - name: Delete release
        uses: cb80/delrel@latest
        with:
          tag: 'unmarked'
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: unmarked
          release_name: Build Result
          body: |
            仓库[EnderWolf006/ElectronClassSchedule:ECS2.0](https://github.com/EnderWolf006/ElectronClassSchedule/tree/ECS2.0)构建输出
          draft: false
          prerelease: true

      - name: Pack folder to zip
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: 'release.zip'
          directory: './out/classSchedule-win32-x64'

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/classSchedule-win32-x64/release.zip
          asset_name: Win10_Win11_ElectronClassSchedule.zip
          asset_content_type: application/zip

      - name: Install specific Electron version
        run: npm install electron@22.3.27

      - name: Rebuild dependencies for specific Electron version
        run: node_modules/.bin/electron-rebuild

      - name: Build application with specific Electron version
        run: npm run build

      - name: Pack folder to zip for specific Electron version
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: 'release-electron-22.3.27.zip'
          directory: './out/classSchedule-win32-x64'

      - name: Upload release asset for specific Electron version
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/classSchedule-win32-x64/release-electron-22.3.27.zip
          asset_name: Win7_Win8_ElectronClassSchedule.zip
          asset_content_type: application/zip
